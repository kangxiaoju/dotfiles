"语法高亮
syntax on
"显示行号
set number relativenumber
"显示光标所在位置的行号和列号
set ruler
set wrap                      "自动折行
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab                  "将tab替换为相应数量空格
set smartindent
set backspace=2
set co=5
"设置取消备份 禁止临时文件生成
set nobackup
set noswapfile
" 为IdeaVim插件增加自动切换为英文输入法的功能,
" idea 需要安装 IdeaVimExtension plugin
set keep-english-in-normal
"设置匹配模式 类似当输入一个左括号时会匹配相应的那个右括号
set showmatch
set clipboard^=unnamed,unnamedplus
"set laststatus=2   "命令行为两行
"set fenc=utf-8     "文件编码
"set mouse=a        "启用鼠标
"set ignorecase     "忽略大小写
set cursorline     "突出显示当前行
"set cursorcolumn   "突出显示当前列
set fdm=marker
" 快捷键
let mapleader = '\<space>'
nnoremap <Leader>fF :action Find<CR>
nnoremap <Leader>fb :action Switcher<CR>
nnoremap <Leader>fr :action Replace<CR>
nnoremap <Leader>fa :action SearchEverywhere<CR>
nnoremap <Leader>fw :action ReplaceInPath<CR>

nnoremap <Leader>gp :action Vcs.UpdateProject<CR>
nnoremap <Leader>gP :action Vcs.Push<CR>
nnoremap <Leader>gb :action Git.Branches<CR>

nnoremap <Leader>fA :action GotoAction<CR>
nnoremap <Leader>fc :action GotoClass<CR>
nnoremap <Leader>fd :action GotoDeclaration<CR>
nnoremap <Leader>ff :action GotoFile<CR>
nnoremap <Leader>fi :action GotoImplementation<CR>
nnoremap <Leader>fs :action GotoSymbol<CR>
nnoremap <Leader>fh :action CallHierarchy<CR>

nnoremap <Leader>cd :action ChooseDebugConfiguration<CR>
nnoremap <Leader>of :action OpenFile<CR>
nnoremap <Leader>do :action OptimizeImports<CR>
" 切换目录
nnoremap <Leader>ow :action ActivateProjectToolWindow<CR>
" 内容重命名
nnoremap <Leader>re :action RenameElement<CR>
" 文件重命名
nnoremap <Leader>rf :action RenameFile<CR>
" 格式化代码
nnoremap <Leader>rc :action ReformatCode<CR>
" 新建文件
nnoremap <Leader>ne :action NewElement<CR>

" 打开文件选项
nnoremap <Leader>om :action FileMenu<CR>
" 打开终端
noremap <Leader>ot :action ActivateTerminalToolWindow<CR>
" 打开快捷选项
nnoremap <Leader>os :action SelectIn<CR>
nnoremap <Leader>bp :action $Paste<CR>
nnoremap <Leader>bc :action $Copy<CR>
" 快捷操作
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
vnoremap <C-k> :m '<-2<CR>gv=gv<CR>
vnoremap <C-j> :m '>+1<CR>gv=gv
inoremap <C-k> <Esc>:m .-2<CR>==gi
inoremap <C-j> <Esc>:m .+1<CR>==gi
